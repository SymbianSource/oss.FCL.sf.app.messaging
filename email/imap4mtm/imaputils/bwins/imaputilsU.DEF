EXPORTS
	?Charconv@CImapUtils@@QAEAAVCImapCharconv@@XZ @ 1 NONAME ; class CImapCharconv & CImapUtils::Charconv(void)
	?CloseLog@CImapLogger@@QAEXH@Z @ 2 NONAME ; void CImapLogger::CloseLog(int)
	?ConvertFromUnicodeToImapUtf7L@CImapCharconv@@QAEPAVHBufC8@@ABVTDesC16@@@Z @ 3 NONAME ; class HBufC8 * CImapCharconv::ConvertFromUnicodeToImapUtf7L(class TDesC16 const &)
	?ConvertToUnicodeFromImapUtf7L@CImapCharconv@@QAEPAVHBufC16@@ABVTDesC8@@@Z @ 4 NONAME ; class HBufC16 * CImapCharconv::ConvertToUnicodeFromImapUtf7L(class TDesC8 const &)
	?CreateDefaultLog@CImapLogger@@QAEXABVTDesC16@@@Z @ 5 NONAME ; void CImapLogger::CreateDefaultLog(class TDesC16 const &)
	?CreateL@CImapUtils@@SAXXZ @ 6 NONAME ; void CImapUtils::CreateL(void)
	?CreateStandardLog@CImapLogger@@QAEXABVTDesC16@@AAH@Z @ 7 NONAME ; void CImapLogger::CreateStandardLog(class TDesC16 const &, int &)
	?Delete@CImapUtils@@SAXXZ @ 8 NONAME ; void CImapUtils::Delete(void)
	?Fs@CImapUtils@@QAEAAVRFs@@XZ @ 9 NONAME ; class RFs & CImapUtils::Fs(void)
	?GetRef@CImapUtils@@SAAAV1@XZ @ 10 NONAME ; class CImapUtils & CImapUtils::GetRef(void)
	?ImapPanic@TImapServerPanic@@SAXW4TImpsPanic@1@@Z @ 11 NONAME ; void TImapServerPanic::ImapPanic(enum TImapServerPanic::TImpsPanic)
	?LogDataIn@CImapLogger@@QAEXHABVTDesC8@@@Z @ 12 NONAME ; void CImapLogger::LogDataIn(int, class TDesC8 const &)
	?LogDataOut@CImapLogger@@QAEXHABVTDesC8@@@Z @ 13 NONAME ; void CImapLogger::LogDataOut(int, class TDesC8 const &)
	?LogFormat@CImapLogger@@QAAXHPBDZZ @ 14 NONAME ; void CImapLogger::LogFormat(int, char const *, ...)
	?LogFormat@CImapLogger@@QAAXHV?$TRefByValue@$$CBVTDesC8@@@@ZZ @ 15 NONAME ; void CImapLogger::LogFormat(int, class TRefByValue<class TDesC8 const >, ...)
	?LogOn@CImapLogger@@QAEXHH@Z @ 16 NONAME ; void CImapLogger::LogOn(int, int)
	?LogText@CImapLogger@@QAEXHABVTDesC8@@@Z @ 17 NONAME ; void CImapLogger::LogText(int, class TDesC8 const &)
	?LogText@CImapLogger@@QAEXHPBD@Z @ 18 NONAME ; void CImapLogger::LogText(int, char const *)
	?Logger@CImapUtils@@QAEAAVCImapLogger@@XZ @ 19 NONAME ; class CImapLogger & CImapUtils::Logger(void)
	?NewL@CImapObservableTimer@@SAPAV1@AAVMImapTimerObserver@@@Z @ 20 NONAME ; class CImapObservableTimer * CImapObservableTimer::NewL(class MImapTimerObserver &)
	?HeaderConverter@CImapCharconv@@QAEAAVCImConvertHeader@@XZ @ 21 NONAME ; class CImConvertHeader & CImapCharconv::HeaderConverter(void)

